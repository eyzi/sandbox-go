name: deploy

on:
  push:
    branches:
      - main

jobs:
  initialize:
    name: Initialize deployment
    runs-on: self-hosted
    outputs:
      semver: ${{ steps.version.outputs.semver }}
      image: ${{ steps.docker.outputs.image }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - name: Get version
        id: version
        run: |
          echo "::set-output name=semver::$(git describe --tags | sed 's/v//')"
      - name: Set image
        id: docker
        run: |
          echo "::set-output name=image::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.version.outputs.semver }}"
      - name: Mask image
        run: |
          echo "::add-mask::${{ steps.docker.outputs.image }}"

  staging:
    name: Deploy to staging
    runs-on: self-hosted
    needs: initialize
    environment: staging
    steps:
      - name: Log version
        run: echo ${{ needs.initialize.outputs.semver }}
      - name: Update deployment image
        uses: wei/curl@master
        with:
          args: >
            -X PATCH -H 'Content-Type: application/json-patch+json' -H 'Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}' ${{ secrets.DEPLOY_URL }}
            --data-raw '[{"op": "replace","path": "/spec/template/spec/containers/0/image","value": "${{ needs.initialize.outputs.image }}"}]'

  production:
    name: Deploy to production
    runs-on: self-hosted
    needs: initialize
    environment: production
    steps:
      - name: Update deployment image
        uses: wei/curl@master
        with:
          args: >
            -X PATCH -H 'Content-Type: application/json-patch+json' -H 'Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}' ${{ secrets.DEPLOY_URL }}
            --data-raw '[{"op": "replace","path": "/spec/template/spec/containers/0/image","value": "${{ needs.initialize.outputs.image }}"}]'
