name: deploy

on:
  push:
    branches:
      - main

jobs:
  initialize:
    name: Initialize deployment
    runs-on: self-hosted
    outputs:
      semver: ${{ steps.version.outputs.semver }}
      image: ${{ steps.tag.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - name: Get version
        id: version
        run: |
          echo "::set-output name=semver::$(git describe --tags | sed 's/v//')"
      - name: Set image
        id: tag
        run: |
          echo "::set-output name=bare::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}"
          echo "::set-output name=version::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.version.outputs.semver }}"
      - name: Mask image
        run: |
          echo "::add-mask::${{ steps.docker.outputs.image }}"
      - uses: docker/login-action@v1
        name: Login to docker registry
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image
        run: docker build -t ${{ steps.tag.outputs.version }} .
      - name: Push image
        run: docker image push ${{ steps.tag.outputs.bare }} --all-tags

  staging:
    name: Deploy to staging
    runs-on: self-hosted
    needs: initialize
    environment: staging
    env:
      IMAGE: ${{ needs.initialize.outputs.image }}
    steps:
      - name: Log version
        run: echo ${{ needs.initialize.outputs.semver }}
      - name: Update deployment image
        uses: wei/curl@master
        with:
          args: >
            -X PATCH -H "Content-Type: application/json-patch+json" -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" ${{ secrets.DEPLOY_URL }}
            --data-raw "[{\"op\": \"replace\",\"path\": \"/spec/template/spec/containers/0/image\",\"value\": \"$IMAGE\"}]"

  production:
    name: Deploy to production
    runs-on: self-hosted
    needs: initialize
    environment: production
    env:
      IMAGE: ${{ needs.initialize.outputs.image }}
    steps:
      - name: Update deployment image
        uses: wei/curl@master
        with:
          args: |
            -X PATCH -H "Content-Type: application/json-patch+json" -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" ${{ secrets.DEPLOY_URL }}
            --data-raw "[{\"op\": \"replace\",\"path\": \"/spec/template/spec/containers/0/image\",\"value\": \"$IMAGE\"}]"
